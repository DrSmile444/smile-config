// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EslintMerger should merge mock eslint config 1`] = `
Object {
  "env": Object {
    "commonjs": true,
    "es2021": false,
    "node": true,
  },
  "extends": Array [
    "../../.eslintrc.json",
    "rule-b-extends",
  ],
  "ignorePatterns": Array [
    "!**/*",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx",
      ],
      "plugins": Array [
        "rule-a-plugin",
        "rule-b-plugin",
      ],
      "rules": Object {
        "rule-a": "replaced-by-b",
        "rule-a-2": "origin",
        "rule-b": "origin",
      },
    },
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
      ],
      "plugins": Array [
        "rule-b-ts-plugin",
      ],
      "rules": Object {
        "rule-b-ts": "origin",
      },
    },
  ],
}
`;

exports[`EslintMerger should merge real eslint config 1`] = `
Object {
  "env": Object {
    "commonjs": true,
    "es2021": true,
    "node": true,
  },
  "extends": Array [
    "airbnb-base",
  ],
  "ignorePatterns": Array [
    "**/*",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx",
      ],
      "rules": Object {
        "arrow-body-style": "error",
        "arrow-parens": Array [
          "error",
          "always",
        ],
        "brace-style": Array [
          "error",
          "1tbs",
        ],
        "class-methods-use-this": "off",
        "comma-dangle": Array [
          "error",
          "always-multiline",
        ],
        "constructor-super": "error",
        "curly": "error",
        "dot-notation": "off",
        "eol-last": "error",
        "eqeqeq": Array [
          "off",
          "smart",
        ],
        "guard-for-in": "error",
        "id-blacklist": "off",
        "id-match": "off",
        "import/extensions": Array [
          "error",
          "never",
          Object {
            "json": "always",
          },
        ],
        "import/prefer-default-export": "off",
        "max-len": Array [
          "error",
          Object {
            "code": 140,
          },
        ],
        "no-bitwise": "off",
        "no-caller": "error",
        "no-console": Array [
          "error",
          Object {
            "allow": Array [
              "info",
              "warn",
              "dir",
              "timeLog",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupEnd",
              "table",
              "dirxml",
              "error",
              "groupCollapsed",
              "Console",
              "profile",
              "profileEnd",
              "timeStamp",
              "context",
            ],
          },
        ],
        "no-debugger": "error",
        "no-duplicate-imports": "error",
        "no-empty": "off",
        "no-empty-function": "off",
        "no-eval": "error",
        "no-fallthrough": "error",
        "no-new-wrappers": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unneeded-ternary": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-use-before-define": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "operator-linebreak": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "quote-props": Array [
          "error",
          "as-needed",
        ],
        "quotes": Array [
          "error",
          "single",
        ],
        "radix": "error",
        "semi": "error",
        "space-before-function-paren": "off",
        "spaced-comment": Array [
          "error",
          "always",
          Object {
            "markers": Array [
              "/",
            ],
          },
        ],
        "valid-typeof": "error",
      },
    },
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
      ],
      "parserOptions": Object {
        "createDefaultProgram": true,
        "project": Array [
          "tsconfig.json",
        ],
      },
      "plugins": Array [
        "@typescript-eslint/tslint",
      ],
      "rules": Object {
        "@typescript-eslint/array-type": Array [
          "error",
          Object {
            "default": "array",
          },
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": Array [
          "off",
          Object {
            "accessibility": "explicit",
          },
        ],
        "@typescript-eslint/indent": Array [
          "error",
          2,
        ],
        "@typescript-eslint/member-delimiter-style": Array [
          "error",
          Object {
            "multiline": Object {
              "delimiter": "semi",
              "requireLast": true,
            },
            "singleline": Object {
              "delimiter": "semi",
              "requireLast": false,
            },
          },
        ],
        "@typescript-eslint/member-ordering": "error",
        "@typescript-eslint/naming-convention": Array [
          "error",
          Object {
            "custom": Object {
              "match": false,
              "regex": "^I[A-Z]",
            },
            "format": Array [
              "PascalCase",
            ],
            "selector": "interface",
          },
          Object {
            "format": Array [
              "strictCamelCase",
              "snake_case",
              "UPPER_CASE",
            ],
            "selector": "property",
          },
        ],
        "@typescript-eslint/no-duplicate-imports": Array [
          "error",
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/quotes": Array [
          "error",
          "single",
        ],
        "@typescript-eslint/semi": Array [
          "error",
          "always",
        ],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/tslint/config": Array [
          "error",
          Object {
            "rules": Object {
              "import-spacing": true,
              "no-restricted-globals": Array [
                true,
                "name",
                "length",
                "event",
                "isNaN",
                "isFinite",
              ],
              "ordered-imports": Object {
                "options": Object {
                  "grouped-imports": true,
                  "groups": Array [
                    Object {
                      "match": "^@angular",
                      "name": "angular imports",
                      "order": 0,
                    },
                    Object {
                      "match": "^\\\\.",
                      "name": "relative imports",
                      "order": 60,
                    },
                    Object {
                      "match": "",
                      "name": "other lib imports",
                      "order": 0,
                    },
                  ],
                },
              },
              "whitespace": Array [
                true,
                "check-branch",
                "check-decl",
                "check-operator",
                "check-separator",
                "check-type",
              ],
            },
          },
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": "error",
        "indent": "off",
        "indent-legacy": "off",
        "no-duplicate-imports": "off",
        "no-shadow": "off",
      },
    },
  ],
  "root": true,
  "settings": Object {
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".js",
          ".jsx",
          ".ts",
          ".tsx",
        ],
      },
      "typescript": Object {},
    },
  },
}
`;
